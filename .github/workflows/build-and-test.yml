name: Build and Test

on:
  pull_request:
    branches:
      - main

  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        platform: [
          ubuntu-22.04-x64,
          macos-12-x64,
          windows-2022-x64,
        ]

        include:
          # Specify OS versions
          - platform: ubuntu-22.04-x64
            host-os: ubuntu-22.04
            target-os: ubuntu
            arch: x64
          - platform: macos-12-x64
            host-os: macos-12
            target-os: macos
            arch: x64
          - platform: windows-2022-x64
            host-os: windows-2022
            target-os: windows
            arch: x64

    runs-on: ${{ matrix.host-os }}

    steps:

    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install Prerequisites
      shell: bash
      run: python3 -m pip install clang-format cmake ninja

    - name: Check Source Formatting
      shell: bash
      run: |
        git fetch origin main
        git clang-format origin/main --diff

        python3 -m json.tool --indent=2 config.json __fmt.config.json
        cmp -s config.json __fmt.config.json

    - name: Configure, Build, and Test (Ubuntu and macOS)
      if: ${{ matrix.target-os == 'ubuntu' || matrix.target-os == 'macos' }}
      shell: bash
      run: >
        cmake -GNinja -Bbuild
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++

        ninja -C build

        ninja -C build check-server

    - name: Setup Visual Studio Shell (Windows)
      if: matrix.target-os == 'windows'
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64

    - name: Configure, Build, and Test (Windows)
      if: matrix.target-os == 'windows'
      shell: bash
      run: >
        cmake -GNinja -Bbuild
        -DCMAKE_BUILD_TYPE=Release

        ninja -C build

        ninja -C build check-server
